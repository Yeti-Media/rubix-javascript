/*! rubix 30-04-2014 */
!function(a){"use strict";var b=function(a,b,c){return this.domain=c||"http://api.rubix.io",this.version=b||"v1",this.userKey=a,this.listCategories=function(a,b){this._request("get",this._buildPath("/categories"),{},function(){var b=JSON.parse(this.responseText);a.call(b)},b)},this.listPatterns=function(a,b,c){this._request("get",this._buildPath("/patterns"),{page:a},function(){var a=JSON.parse(this.responseText);b.call(a)},c)},this.createPattern=function(a,b,c){this._request("post",this._buildPath("/patterns"),a,function(){var a=JSON.parse(this.responseText);b.call(a)},c)},this.deletePattern=function(a,b,c){this._request("delete",this._buildPath("/patterns"+a),{},function(){var a=JSON.parse(this.responseText);b.call(a)},c)},this.featureMatcher=function(a,b,c){this._request("post",this._buildPath("/patterns/feature_matcher"),a,function(){var a=JSON.parse(this.responseText);b.call(a)},c)},this.ocr=function(a,b,c){this._request("post",this._buildPath("/patterns/ocr"),a,function(){var a=JSON.parse(this.responseText);b.call(a)},c)},this.updateTrainer=function(a,b){this._request("get",this._buildPath("/trainers/matching"),{},function(){var b=JSON.parse(this.responseText);a.call(b)},b)},this._request=function(a,b,c,d,e){d=d||function(){},e=e||function(){};var f=new XMLHttpRequest;f.onload=d,f.open(a,b,!0),f.setRequestHeader("user_key",this.userKey),f.setRequestHeader("Content-Type","application/json; charset=utf-8"),f.onreadystatechange=function(){if(4===f.readyState&&200!==f.status){var a=JSON.parse(this.responseText);a.call(a)}},f.send(JSON.stringify(c))},this._buildPath=function(a){return this.domain+"/api/"+this.version+a},!0};b.VERSION="0.0.0",a.Rubix=b}(this);